scalar Date

type User {
  _id: String
  name: String
  email: String
  password: String
  isVerified: Boolean
  createdAt: Date
}
type ImageUrl{
  url: String
  id: String
}
type UserTeam {
  adminId:String 
  teamId: String
  name: String
  teamLink: String
  urlImage: ImageUrl
}

type Query {
  resendVerificationEmail(input: ResendVerificationEmailInput!): Boolean
  sendResetPasswordEmail(input: SendResetPasswordEmailInput!): Boolean
  searchUserByEmail(input: SearchUserByEmailInput!): UserPublicInfo
  searchUserListByEmail(input: SearchUserByEmailInput!): [UserPublicInfo]
  getTeamList: [UserTeam]! @auth
  checkToken: Boolean @auth
  getUserId: String @auth
  getUserSubscriptions(customer: String!): [Subscription] @auth
  getSubscriptionInvoices(subscription: String!): [Invoice] @auth
  getInvoice(invoiceId: String!): Invoice @auth
  getUserBillingByStripe(customer: String!): String @auth
}

type Subscription {
  id: String,
  status: String,
  priceId: String,
  interval: String,
  quantity: Int,
  created: Int,
  currentPeriodStart: Int,
  currentPeriodEnd: Int,
  cancelAtPeriodEnd: Boolean,
}

type Invoice {
  id: String,
  number: String,
  created: Int,
  total: Int,
  hostedInvoiceUrl: String,
  customerEmail: String,
  subscription: String,
}

type UserPublicInfo {
  userId: String!
  name: String!
  email: String!
}

input SearchUserByEmailInput {
  email: String!
}

input ResendVerificationEmailInput {
  email: String! @email
}

input SendResetPasswordEmailInput {
  email: String! @email
}

type AuthPayload {
  token: String
  name: String
  email: String
  stripeCustomerId: String
}

type Mutation {
  login(input: LoginInput!): AuthPayload
  signUp(input: SignUpInput!): Boolean
  activate(token: String!): Boolean
  checkResetPasswordToken(token: String!): Boolean
  loginWithGoogle(googleToken: String!): AuthPayload
  loginWithFacebook(input: LoginWithFacebookInput!): AuthPayload
  resetPassword(input: ResetPasswordInput!): Boolean
  createSubscription(input: SubscriptionInput!): Subscription @auth
  reactivateSubscription(subscriptionId: String!): String @auth
  cancelSubscription(subscriptionId: String!): String @auth
  webhook: String @auth
}

input SubscriptionInput {
  priceId: String!
}

type Subscription {
  stripeCustomerId: String
  subscriptionId: String
  clientSecret: String
  message: String
}

input LoginWithFacebookInput {
  userId: String!
  facebookToken: String!
}

input SignUpInput {
  name: String! @name
  email: String! @email
  password: String! @password
}

input LoginInput {
  email: String! @email
  password: String! @minLength(min: 6)
}

input ResetPasswordInput {
  token: String!
  password: String! @password
}
